{"ast":null,"code":"var _jsxFileName = \"/Users/minhnguyen/Code/covid-tracking-api/client/pages/index.js\";\nvar __jsx = React.createElement;\n// import React, { Component } from 'react';\n// export default class IndexPage extends Component {\n//   state = {\n//     response: {},\n//   };\n//   async componentDidMount() {\n//     const response = await (await fetch('/api/ping')).json();\n//     this.setState({ response });\n//   }\n//   render() {\n//     return (\n//       <div>\n//         <p>Welcome to next.js!</p>\n//         <p>{this.state.response.greeting}</p>\n//         <p>\n//           <pre>\n//             {JSON.stringify(this.state.response, undefined, 2)}\n//           </pre>\n//         </p>\n//       </div>\n//     );\n//   }\n// }\nimport React, { Component } from 'react';\nimport CanvasJSReact from '../canvas/canvasjs.react';\nlet CanvasJS = CanvasJSReact.CanvasJS;\nlet CanvasJSChart = CanvasJSReact.CanvasJSChart;\nlet dataPoints = [];\nexport default class App extends Component {\n  render() {\n    const options = {\n      theme: \"light2\",\n      title: {\n        text: \"Stock Price of NIFTY 50\"\n      },\n      axisY: {\n        title: \"Number of people\",\n        prefix: \"$\",\n        includeZero: false\n      },\n      data: [{\n        type: \"line\",\n        xValueFormatString: \"MMM YYYY\",\n        yValueFormatString: \"$#,##0.00\",\n        dataPoints: dataPoints\n      }]\n    };\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }\n    }, __jsx(CanvasJSChart, {\n      options: options,\n      onRef: ref => this.chart = ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  componentDidMount() {\n    var chart = this.chart;\n    fetch('https://canvasjs.com/data/gallery/react/nifty-stock-price.json').then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      for (var i = 0; i < data.length; i++) {\n        dataPoints.push({\n          x: new Date(data[i].x),\n          y: data[i].y\n        });\n      }\n\n      chart.render();\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/minhnguyen/Code/covid-tracking-api/client/pages/index.js"],"names":["React","Component","CanvasJSReact","CanvasJS","CanvasJSChart","dataPoints","App","render","options","theme","title","text","axisY","prefix","includeZero","data","type","xValueFormatString","yValueFormatString","ref","chart","componentDidMount","fetch","then","response","json","i","length","push","x","Date","y"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,aAAP,MAA0B,0BAA1B;AACA,IAAIC,QAAQ,GAAGD,aAAa,CAACC,QAA7B;AACA,IAAIC,aAAa,GAAGF,aAAa,CAACE,aAAlC;AACA,IAAIC,UAAU,GAAG,EAAjB;AAEA,eAAe,MAAMC,GAAN,SAAkBL,SAAlB,CAA4B;AACzCM,EAAAA,MAAM,GAAG;AACP,UAAMC,OAAO,GAAG;AACdC,MAAAA,KAAK,EAAE,QADO;AAEdC,MAAAA,KAAK,EAAE;AACLC,QAAAA,IAAI,EAAE;AADD,OAFO;AAKdC,MAAAA,KAAK,EAAE;AACLF,QAAAA,KAAK,EAAE,kBADF;AAELG,QAAAA,MAAM,EAAE,GAFH;AAGLC,QAAAA,WAAW,EAAE;AAHR,OALO;AAUdC,MAAAA,IAAI,EAAE,CAAC;AACLC,QAAAA,IAAI,EAAE,MADD;AAELC,QAAAA,kBAAkB,EAAE,UAFf;AAGLC,QAAAA,kBAAkB,EAAE,WAHf;AAILb,QAAAA,UAAU,EAAEA;AAJP,OAAD;AAVQ,KAAhB;AAiBA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,aAAD;AAAe,MAAA,OAAO,EAAEG,OAAxB;AACE,MAAA,KAAK,EAAEW,GAAG,IAAI,KAAKC,KAAL,GAAaD,GAD7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAOD;;AAEDE,EAAAA,iBAAiB,GAAG;AAClB,QAAID,KAAK,GAAG,KAAKA,KAAjB;AACAE,IAAAA,KAAK,CAAC,gEAAD,CAAL,CACGC,IADH,CACQ,UAAUC,QAAV,EAAoB;AACxB,aAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,KAHH,EAIGF,IAJH,CAIQ,UAAUR,IAAV,EAAgB;AACpB,WAAK,IAAIW,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGX,IAAI,CAACY,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;AACpCrB,QAAAA,UAAU,CAACuB,IAAX,CAAgB;AACdC,UAAAA,CAAC,EAAE,IAAIC,IAAJ,CAASf,IAAI,CAACW,CAAD,CAAJ,CAAQG,CAAjB,CADW;AAEdE,UAAAA,CAAC,EAAEhB,IAAI,CAACW,CAAD,CAAJ,CAAQK;AAFG,SAAhB;AAID;;AACDX,MAAAA,KAAK,CAACb,MAAN;AACD,KAZH;AAaD;;AA3CwC","sourcesContent":["// import React, { Component } from 'react';\n// export default class IndexPage extends Component {\n//   state = {\n//     response: {},\n//   };\n//   async componentDidMount() {\n//     const response = await (await fetch('/api/ping')).json();\n//     this.setState({ response });\n//   }\n//   render() {\n//     return (\n//       <div>\n//         <p>Welcome to next.js!</p>\n//         <p>{this.state.response.greeting}</p>\n//         <p>\n//           <pre>\n//             {JSON.stringify(this.state.response, undefined, 2)}\n//           </pre>\n//         </p>\n//       </div>\n//     );\n//   }\n// }\nimport React, { Component } from 'react'\nimport CanvasJSReact from '../canvas/canvasjs.react'\nlet CanvasJS = CanvasJSReact.CanvasJS\nlet CanvasJSChart = CanvasJSReact.CanvasJSChart\nlet dataPoints = []\n\nexport default class App extends Component {\n  render() {\n    const options = {\n      theme: \"light2\",\n      title: {\n        text: \"Stock Price of NIFTY 50\"\n      },\n      axisY: {\n        title: \"Number of people\",\n        prefix: \"$\",\n        includeZero: false\n      },\n      data: [{\n        type: \"line\",\n        xValueFormatString: \"MMM YYYY\",\n        yValueFormatString: \"$#,##0.00\",\n        dataPoints: dataPoints\n      }]\n    }\n    return (\n      <div>\n        <CanvasJSChart options={options}\n          onRef={ref => this.chart = ref}\n        />\n      </div>\n    );\n  }\n\n  componentDidMount() {\n    var chart = this.chart;\n    fetch('https://canvasjs.com/data/gallery/react/nifty-stock-price.json')\n      .then(function (response) {\n        return response.json();\n      })\n      .then(function (data) {\n        for (var i = 0; i < data.length; i++) {\n          dataPoints.push({\n            x: new Date(data[i].x),\n            y: data[i].y\n          });\n        }\n        chart.render();\n      });\n  }\n}\n"]},"metadata":{},"sourceType":"module"}