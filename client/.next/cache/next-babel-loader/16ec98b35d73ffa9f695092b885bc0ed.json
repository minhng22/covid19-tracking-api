{"ast":null,"code":"const express = require('express');\n\nconst next = require('next');\n\nmodule.exports = async function ({\n  beforeNext = () => {},\n  dir = '.'\n} = {}) {\n  const dev = true;\n  const port = process.env.PORT || 3000;\n  const app = next({\n    dev,\n    dir\n  });\n  const handle = app.getRequestHandler();\n  const server = express();\n  await app.prepare();\n  await beforeNext(server);\n  server.use(express.static(`${dir}/static`));\n  server.get('*', (req, res) => handle(req, res));\n  server.listen(port, err => {\n    if (err) throw err;\n    console.log(`> Ready on port: ${port}`);\n  });\n};","map":{"version":3,"sources":["/Users/minhnguyen/Code/covid-tracking-api/client/pages/index.js"],"names":["express","require","next","module","exports","beforeNext","dir","dev","port","process","env","PORT","app","handle","getRequestHandler","server","prepare","use","static","get","req","res","listen","err","console","log"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,MAAMC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAApB;;AACAE,MAAM,CAACC,OAAP,GAAiB,gBAAgB;AAC/BC,EAAAA,UAAU,GAAG,MAAM,CAAG,CADS;AAE/BC,EAAAA,GAAG,GAAG;AAFyB,IAEjB,EAFC,EAGf;AACA,QAAMC,GAAG,OAAT;AACA,QAAMC,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYC,IAAZ,IAAoB,IAAjC;AACA,QAAMC,GAAG,GAAGV,IAAI,CAAC;AAAEK,IAAAA,GAAF;AAAOD,IAAAA;AAAP,GAAD,CAAhB;AACA,QAAMO,MAAM,GAAGD,GAAG,CAACE,iBAAJ,EAAf;AACA,QAAMC,MAAM,GAAGf,OAAO,EAAtB;AACA,QAAMY,GAAG,CAACI,OAAJ,EAAN;AACA,QAAMX,UAAU,CAACU,MAAD,CAAhB;AACAA,EAAAA,MAAM,CAACE,GAAP,CAAWjB,OAAO,CAACkB,MAAR,CAAgB,GAAEZ,GAAI,SAAtB,CAAX;AACAS,EAAAA,MAAM,CAACI,GAAP,CAAW,GAAX,EAAgB,CAACC,GAAD,EAAMC,GAAN,KAAcR,MAAM,CAACO,GAAD,EAAMC,GAAN,CAApC;AACAN,EAAAA,MAAM,CAACO,MAAP,CAAcd,IAAd,EAAoBe,GAAG,IAAI;AACzB,QAAIA,GAAJ,EAAS,MAAMA,GAAN;AACTC,IAAAA,OAAO,CAACC,GAAR,CAAa,oBAAmBjB,IAAK,EAArC;AACD,GAHD;AAID,CAjBD","sourcesContent":["const express = require('express');\nconst next = require('next');\nmodule.exports = async function ({\n  beforeNext = () => { },\n  dir = '.' } = {}\n) {\n  const dev = process.env.NODE_ENV === 'development';\n  const port = process.env.PORT || 3000;\n  const app = next({ dev, dir });\n  const handle = app.getRequestHandler();\n  const server = express();\n  await app.prepare();\n  await beforeNext(server);\n  server.use(express.static(`${dir}/static`));\n  server.get('*', (req, res) => handle(req, res));\n  server.listen(port, err => {\n    if (err) throw err;\n    console.log(`> Ready on port: ${port}`);\n  });\n};\n"]},"metadata":{},"sourceType":"script"}