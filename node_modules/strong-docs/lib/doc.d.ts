import { Annotation } from './annotation';
import { Docs } from './docs';
import { Comment } from './dox';
import { Options, Section } from './ts-helper';
export declare class Doc {
    file: string;
    contents: string;
    isJS: boolean;
    docs: Docs;
    filename: string;
    markedOptions: Options;
    commentTemplate: string;
    sections: Section[];
    classes: Annotation[];
    methods: Annotation[];
    properties: Annotation[];
    html?: string;
    /**
     * Create a document from a file path and its contents.
     *
     * @param {String} file The file path
     * @param {String} contents The file contents
     * @param {Boolean} isJS Is the document JavaScript
     * @param {Docs} docs The parent docs object
     * @constructor
     */
    constructor(file: string, contents: string, isJS: boolean, docs: Docs);
    /**
     * Parse the `doc.contents` as JSDoc annotated JavaScript.
     */
    parseJavaScript(): void;
    /**
     * Parse the `doc.contents` as markdown.
     */
    parseMarkdown(): void;
    getClasses(): Annotation[];
    /**
     * Render a code comment/annotation and section using the inherited template.
     * @param {Object} comment The comment to render
     * @param {Object} section The section to render
     */
    renderComment(comment: Comment, section: Section): string;
}
