"use strict";
// Copyright IBM Corp. 2018,2019. All Rights Reserved.
// Node module: @loopback/boot
// This file is licensed under the MIT License.
// License text available at https://opensource.org/licenses/MIT
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const context_1 = require("@loopback/context");
const core_1 = require("@loopback/core");
const booters_1 = require("./booters");
const bootstrapper_1 = require("./bootstrapper");
const keys_1 = require("./keys");
/**
 * BootComponent is used to export the default list of Booter's made
 * available by this module as well as bind the BootStrapper to the app so it
 * can be used to run the Booters.
 */
let BootComponent = class BootComponent {
    /**
     *
     * @param app - Application instance
     */
    constructor(app) {
        // Export a list of default booters in the component so they get bound
        // automatically when this component is mounted.
        this.booters = [
            booters_1.ApplicationMetadataBooter,
            booters_1.ControllerBooter,
            booters_1.RepositoryBooter,
            booters_1.ServiceBooter,
            booters_1.DataSourceBooter,
            booters_1.LifeCycleObserverBooter,
            booters_1.InterceptorProviderBooter,
            booters_1.ModelApiBooter,
        ];
        // Bound as a SINGLETON so it can be cached as it has no state
        app
            .bind(keys_1.BootBindings.BOOTSTRAPPER_KEY)
            .toClass(bootstrapper_1.Bootstrapper)
            .inScope(context_1.BindingScope.SINGLETON);
    }
};
BootComponent = tslib_1.__decorate([
    tslib_1.__param(0, context_1.inject(core_1.CoreBindings.APPLICATION_INSTANCE)),
    tslib_1.__metadata("design:paramtypes", [core_1.Application])
], BootComponent);
exports.BootComponent = BootComponent;
//# sourceMappingURL=boot.component.js.map