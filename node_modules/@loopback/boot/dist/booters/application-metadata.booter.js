"use strict";
// Copyright IBM Corp. 2018. All Rights Reserved.
// Node module: @loopback/boot
// This file is licensed under the MIT License.
// License text available at https://opensource.org/licenses/MIT
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const context_1 = require("@loopback/context");
const core_1 = require("@loopback/core");
const debug_1 = __importDefault(require("debug"));
const keys_1 = require("../keys");
const path = require("path");
const debug = debug_1.default('loopback:boot:booter:application-metadata');
/**
 *
 * Configure the application with metadata from `package.json`
 *
 * @param app - Application instance
 * @param projectRoot - Root of User Project
 */
let ApplicationMetadataBooter = class ApplicationMetadataBooter {
    constructor(app, projectRoot) {
        this.app = app;
        this.projectRoot = projectRoot;
    }
    async configure() {
        try {
            const pkg = require(path.resolve(this.projectRoot, 'package.json'));
            this.app.setMetadata(pkg);
        }
        catch (err) {
            debug('package.json not found', err);
        }
    }
};
ApplicationMetadataBooter = __decorate([
    __param(0, context_1.inject(core_1.CoreBindings.APPLICATION_INSTANCE)),
    __param(1, context_1.inject(keys_1.BootBindings.PROJECT_ROOT)),
    __metadata("design:paramtypes", [core_1.Application, String])
], ApplicationMetadataBooter);
exports.ApplicationMetadataBooter = ApplicationMetadataBooter;
//# sourceMappingURL=application-metadata.booter.js.map